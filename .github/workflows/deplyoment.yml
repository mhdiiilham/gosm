name: Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Which environment you would like to deploy this service to
        options:
          - PRODUCTION

jobs:
  init:
    name: "Unit Test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.23.4

      - name: Run Unit Test
        run: go test -race -cover -v ./...
  
  migration:
    name: Run Pending Migration
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.23.4

      - name: Install golang-migrate
        run: go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

      - name: Run Pending Migration(s)
        run: migrate -database ${{ secrets.DATABASE_URL }} -path database/migrations  up

  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    needs: [init, migration]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update configuration.*.yaml files
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.database.url=["${{ secrets.DATABASE_URL }}"] | .jwtKey=["${{ secrets.JWT_KEY }}"] | .services.kirimWa.key=["${{ secrets.KIRIM_WA_API_KEY }}"] | .services.kirimWa.deviceId=["${{ secrets.KIRIM_WA_DEVICE_ID }}"]' config.${{ github.event.inputs.environment }}.yaml

      - name: Setup Cloud cli
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ vars.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/${{ vars.GCP_PROJECT }}/gosm:${{ github.ref_name }} --build-arg VERSION=${{ github.ref_name }} --build-arg APP_ENV=${{ github.event.inputs.environment }} .
          docker push gcr.io/${{ vars.GCP_PROJECT }}/gosm:${{ github.ref_name }}

      - name: Deploy to Cloud Run
        id: gohibeesh
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: gosm
          image: gcr.io/${{ vars.GCP_PROJECT }}/gosm:${{ github.ref_name }}
          region: us-west1
          env_vars: |-
            APP_ENV=${{ github.event.inputs.environment }}

      - name: Show Output
        run: echo ${{ steps.gohibeesh.outputs.url }}
